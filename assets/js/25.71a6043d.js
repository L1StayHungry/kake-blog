(window.webpackJsonp=window.webpackJsonp||[]).push([[25],{449:function(e,t,r){"use strict";r.r(t);var a=r(2),v=Object(a.a)({},(function(){var e=this,t=e._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h2",{attrs:{id:"vue的响应式原理"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#vue的响应式原理"}},[e._v("#")]),e._v(" Vue的响应式原理")]),e._v(" "),t("p",[t("a",{attrs:{href:"https://cn.vuejs.org/v2/guide/reactivity.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("vue2响应式【官方】"),t("OutboundLink")],1)]),e._v(" "),t("p",[t("a",{attrs:{href:"https://v3.cn.vuejs.org/guide/reactivity.html#vue-%E5%A6%82%E4%BD%95%E7%9F%A5%E9%81%93%E5%93%AA%E4%BA%9B%E4%BB%A3%E7%A0%81%E5%9C%A8%E6%89%A7%E8%A1%8C",target:"_blank",rel:"noopener noreferrer"}},[e._v("vue3响应式【官方】"),t("OutboundLink")],1)]),e._v(" "),t("h4",{attrs:{id:"数据双向绑定"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#数据双向绑定"}},[e._v("#")]),e._v(" 数据双向绑定")]),e._v(" "),t("ul",[t("li",[t("p",[e._v("不同框架之间的差异")]),e._v(" "),t("ul",[t("li",[e._v("vue: 数据劫持 + 发布-订阅模式")]),e._v(" "),t("li",[e._v("angular: 脏值检查")])])]),e._v(" "),t("li",[t("h4",{attrs:{id:"数据劫持-vue2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#数据劫持-vue2"}},[e._v("#")]),e._v(" 数据劫持 Vue2")]),e._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/defineProperty",target:"_blank",rel:"noopener noreferrer"}},[e._v("Object.defineProperty"),t("OutboundLink")],1),e._v("()劫持(监控)属性的setter、getter")])]),e._v(" "),t("p",[t("img",{attrs:{src:"https://camo.githubusercontent.com/b449d11965717609db6e1b9b00bacdc466fcabc3/68747470733a2f2f696d61676573323031352e636e626c6f67732e636f6d2f626c6f672f3933343634342f3230313730362f3933343634342d32303137303630353036353035363138342d3330373534373938362e706e67",alt:"img"}})]),e._v(" "),t("p",[e._v("​\t1、Observer 数据")]),e._v(" "),t("p",[e._v("监听器 ，")]),e._v(" "),t("ul",[t("li",[t("p",[t("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/API/MutationObserver/MutationObserver",target:"_blank",rel:"noopener noreferrer"}},[e._v("MutationObserver"),t("OutboundLink")],1),e._v(": 可以在DOM被修改时异步执行回调(mutation 突变，observer 观察者)")])]),e._v(" "),t("li",[t("p",[e._v("注意事项")]),e._v(" "),t("ul",[t("li",[e._v("无法检测property的添加和移除")]),e._v(" "),t("li",[e._v("无法检测数组的一些变动（直接通过索引修改数组项、修改数组长度）")])])])])]),e._v(" "),t("li",[t("h4",{attrs:{id:"数据代理-vue3"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#数据代理-vue3"}},[e._v("#")]),e._v(" 数据代理 Vue3")]),e._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Proxy",target:"_blank",rel:"noopener noreferrer"}},[e._v("Proxy"),t("OutboundLink")],1),e._v(" : Proxy 是一个对象，它包装了另一个对象，并允许你拦截对该对象的任何交互")])])])]),e._v(" "),t("h2",{attrs:{id:"虚拟dom"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#虚拟dom"}},[e._v("#")]),e._v(" 虚拟DOM")]),e._v(" "),t("ol",[t("li",[e._v("​\t用 JavaScript 生成名为 Virtual Dom 的 DOM 副本，这样做的原因是用 JavaScript 直接操作 DOM 的计算成本很高。虽然用 JavaScript 执行更新很快，但是找到所需的 DOM 节点并用 JavaScript 更新它们的成本却很高。批量处理调用，并一次性更改 DOM。")]),e._v(" "),t("li",[e._v("虚拟 DOM 是轻量级的 JavaScript 对象，由渲染函数创建。它包含三个参数：元素，具有数据、prop、attr 等的对象，以及一个数组。数组是我们传递子级的地方，子级也具有所有这些参数，然后它们也可以具有子级，依此类推，直到我们构建完整的元素树为止。")]),e._v(" "),t("li",[e._v("如果需要更新列表项，我们可以借助前面提到的响应性在 JavaScript 中进行。我们将更改应用至 JavaScript 副本、虚拟 DOM 中，然后在它们和实际 DOM 之间执行 "),t("strong",[e._v("diff")]),e._v("。只有这样，我们才能对已更改的内容进行更新。虚拟 DOM 允许我们对 UI 进行高效的更新！")])])])}),[],!1,null,null,null);t.default=v.exports}}]);